
type User @model {
  id: ID! @isUnique
  createdAt: DateTime!
  updatedAt: DateTime!
  isDeleted: Boolean @defaultValue(value: "false")

  name: String
  dateOfBirth: DateTime
  email: String
  address: String
  addressLat: String
  addressLong: String
  phoneNo: String
  imageUrl: String
  firebaseUserId: String! @isUnique
  gender: Gender
  access: AccessType @defaultValue(value: "CUSTOMER")
  prescriptions: [Prescription!]! @relation(name: "UserPrescriptionRelation")
  logs: [Log!]! @relation(name: "LogsUserRelation")
}

type Prescription @model {
  id: ID! @isUnique
  createdAt: DateTime!
  updatedAt: DateTime!
  isDeleted: Boolean @defaultValue(value: "false")

  orderId: String!
  orderDate: String
  amount: Float @defaultValue(value: -1)
  prescriptionUrl: String
  billUrl: String
  customerMessage: String
  isConfirmed: Boolean @defaultValue(value: "false")
  status: StatusType @defaultValue(value: "PLACED")
  customer: User! @relation(name: "UserPrescriptionRelation")
  logs: [Log!]! @relation(name: "PrescriptionLogsRelation")
  deliveryAddress: String!
  deliveryPhoneNumber: String!
  deliveryName: String!
}

type Log @model {
  id: ID! @isUnique
  createdAt: DateTime!
  updatedAt: DateTime!

  prescription: Prescription! @relation(name: "PrescriptionLogsRelation")
  action: String
  message: String
  status: StatusType!
  user: User! @relation(name: "LogsUserRelation")
}

type Pharmacy @model {
  id: ID! @isUnique
  createdAt: DateTime!
  updatedAt: DateTime!
  isDeleted: Boolean @defaultValue(value: "false")

  name: String
  drescription: String
  address: String
  lat: String
  long: String
  phoneNos: [String!]!
  emailIds: [String!]!
  website: String
  noOfOrders: Int 
  orderLabelPrefix: String
  imageUrls: [String!]!

}

enum Gender {
  MALE,
  FEMALE,
  OTHERS
}

enum AccessType {
    ADMIN,
    CUSTOMER,
    PHARMACIST
}

enum StatusType {
    PLACED,
    SHIPPED,
    DELIVERED,
    CANCELLED,
    REJECTED
}

# type UserLogsRelation @model {
#   id: ID! @isUnique
#   createdAt: DateTime!
#   updatedAt: DateTime!
#   isDeleted: Boolean @defaultValue(value: "false")

#   user: User! @relation(name: "UserLogsRelation")
#   logs: [Log!]! @relation(name: "LogsUserRelation")
# }

# type BuyPrescriptionRelation @model {
#   id: ID! @isUnique
#   createdAt: DateTime!
#   updatedAt: DateTime!
#   isDeleted: Boolean @defaultValue(value: "false")

#   customer: User! @relation(name: "UserBuyPres")
#   prescriptions: [Prescription!]! @relation(name: "BuyPrescriptions")
# }

# The following types define the data model of the example service
# based on which the GraphQL API is generated